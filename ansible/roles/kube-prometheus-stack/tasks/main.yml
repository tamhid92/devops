---
# Install Helm
# - name: Install Helm
#   shell: |
#     curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
#     chmod 700 get_helm.sh
#     ./get_helm.sh
# - name: Add Helm Repo
#   shell: |
#     helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
#     helm repo update
# - name: Install Kube Prometheus Stack Helm Chart
#   shell: |
#     helm install prometheus prometheus-community/kube-prometheus-stack --namespace monitoring --create-namespace
# Expose Prometheus and Grafana ports
# - name: Expose Prometheus server
#   shell: |
#     kubectl expose service prometheus-operated --type=NodePort --name=prometheus-server --namespace=monitoring
# - name: Expose Grafana Server
#   shell: |
#     kubectl expose service prometheus-grafana --type=NodePort --target-port=3000 --name=grafana-server --namespace=monitoring
# Get the exposed NodePorts
- name: Get Prometheus nodeport
  shell: |
    kubectl get svc prometheus-server -n monitoring -o json | jq -r '.spec' | jq -r '.ports[0]' | jq -r '.nodePort'
  register: nodeport_prom
- name: Get Grafana nodeport
  shell: |
    kubectl get svc grafana-server -n monitoring -o json | jq -r '.spec' | jq -r '.ports[0]' | jq -r '.nodePort'
  register: nodeport_graf
# # Get Vault API token and add DNS records to CloudFlare
# - name: Login to Vault
#   community.hashi_vault.vault_kv2_get:
#     url: "{{ lookup('env', 'VAULT_ADDR') }}"
#     engine_mount_point: secret
#     path: cloudflare_api_token
#     auth_method: token
#   environment:
#     VAULT_TOKEN: "{{ lookup('env', 'VAULT_TOKEN') }}"
#   register: response
#   delegate_to: 127.0.0.1

# - name: Create CloudFlare DNS record using api token
#   community.general.cloudflare_dns:
#     zone: tchowdhury.org
#     record: prometheus
#     type: A
#     value: 192.168.68.81
#     api_token: "{{ item.value }}"
#   with_dict: "{{ response.secret }}"
#   delegate_to: 127.0.0.1
#   no_log: true

# - name: Create CloudFlare DNS record using api token
#   community.general.cloudflare_dns:
#     zone: tchowdhury.org
#     record: grafana
#     type: A
#     value: 192.168.68.81
#     api_token: "{{ item.value }}"
#   with_dict: "{{ response.secret }}"
#   delegate_to: 127.0.0.1
#   no_log: true
# # Get IP address for Reverse Proxy 
- name: Get Reverse Proxy IP from API
  uri:
    url: https://inventory.tchowdhury.org/vms/reverse-proxy
    status_code: 200
    body_format: json
  register: api_response

- name: Add records to Ngnix Reverse Proxy
  import_tasks:
    file: update_reverse_proxy.yml
  delegate_to: "{{ api_response.json.ip_addr }}"
