---
# Create Ansible folder as a working dir
- name: Create ansible folder
  file:
    path: '/home/{{ ansible_ssh_user }}/ansible'
    state: directory

- name: Copy files to RP
  copy:
    src: '{{ item }}'
    dest: '/home/{{ ansible_ssh_user }}/ansible'
  loop:
    - 'scripts/update_reverse_proxy.py'
    - 'templates/ngnix-conf.conf.j2'

- name: Create backup folder
  file:
    path: '/home/{{ ansible_ssh_user }}/ngnix/data/backup'
    state: directory

- name: Create a database backup and make a copy to edit
  shell: |
    sudo cp /home/{{ ansible_ssh_user }}/ngnix/data/database.sqlite /home/{{ ansible_ssh_user }}/ngnix/data/backup/database.sqlite.bkup
    sudo cp /home/{{ ansible_ssh_user }}/ngnix/data/database.sqlite /home/{{ ansible_ssh_user }}/ansible/database.sqlite

- name: Run Python Script to update ngnix
  shell: |
    sudo python3 /home/{{ ansible_ssh_user }}/ansible/update_reverse_proxy.py -n {{ item.name }} -p {{ item.port }} -ip {{ item.ip }}
  loop:
    - name: "prometheus"
      port: "{{ nodeport_prom.stdout }}"
      ip: "{{ k8master_ip }}"
    - name: "grafana"
      port: "{{ nodeport_graf.stdout }}"
      ip: "{{ k8master_ip }}"

- name: Delete current database and copy over edited one and ngnix config file
  shell: |
    sudo rm /home/ubuntu/ngnix/data/database.sqlite
    sudo cp /home/{{ ansible_ssh_user }}/ansible/database.sqlite /home/ubuntu/ngnix/data/database.sqlite
  become: yes

- name: Restart ngnix docker container
  community.docker.docker_container:
    name: "ngnix_app_1"
    restart: true

- name: Clean Up leftover files on RP
  ansible.builtin.file:
    state: absent
    path: /home/{{ ansible_ssh_user }}/ansible/
  become: yes
